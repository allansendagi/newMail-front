{"ast":null,"code":"import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER } from '../types';\nimport axios from 'axios';\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/login', userData).then(res => {\n    setAuthorizationHeader(res.data.token);\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push('/');\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('FBIdToken');\n  delete axios.defaults.headers.common['Authorization'];\n  dispatch({\n    type: SET_UNAUTHENTICATED\n  });\n};\nexport const getUserData = () => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.get('/user').then(res => {\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const signupUser = (newUserData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/signup', newUserData).then(res => {\n    setAuthorizationHeader(res.data.token);\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push('/');\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const uploadImage = formData => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.post('/user/image', formData).then(() => {\n    dispatch(getUserData());\n  }).catch(err => console.log(err));\n};\n\nconst setAuthorizationHeader = token => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/newMail-front/src/redux/actions/useractions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","SET_UNAUTHENTICATED","LOADING_USER","axios","loginUser","userData","history","dispatch","type","post","then","res","setAuthorizationHeader","data","token","getUserData","push","catch","err","payload","response","logoutUser","localStorage","removeItem","defaults","headers","common","get","console","log","signupUser","newUserData","uploadImage","formData","FBIdToken","setItem"],"mappings":"AAAA,SAASA,QAAT,EACCC,UADD,EAECC,YAFD,EAGCC,UAHD,EAICC,mBAJD,EAKCC,YALD,QAMO,UANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAwBC,QAAD,IAAc;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACAG,EAAAA,KAAK,CACFM,IADH,CACQ,QADR,EACkBJ,QADlB,EAEIK,IAFJ,CAEUC,GAAD,IAAS;AAChBC,IAAAA,sBAAsB,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAtB;AAEIP,IAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AACAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACHO,IAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACA,GARH,EASGC,KATH,CASSC,GAAG,IAAI;AACbX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,UAAR;AACRqB,MAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaP;AADd,KAAD,CAAR;AAGC,GAbJ;AAcE,CAhBI;AAiBP,OAAO,MAAMQ,UAAU,GAAG,MAAOd,QAAD,IAAc;AAC7Ce,EAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACA,SAAOpB,KAAK,CAACqB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACAnB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAMc,WAAW,GAAE,MAAMR,QAAD,IAAa;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACAC,EAAAA,KAAK,CACHwB,GADF,CACM,OADN,EAEEjB,IAFF,CAEOC,GAAG,IAAI;AACbJ,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEX,QADE;AAERsB,MAAAA,OAAO,EAAER,GAAG,CAACE;AAFL,KAAD,CAAR;AAIA,GAPD,EAQCI,KARD,CAQOC,GAAG,IAAIU,OAAO,CAACC,GAAR,CAAYX,GAAZ,CARd;AASA,CAXM;AAYP,OAAO,MAAMY,UAAU,GAAG,CAACC,WAAD,EAAczB,OAAd,KAA2BC,QAAD,IAAc;AACjEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACAG,EAAAA,KAAK,CACFM,IADH,CACQ,SADR,EACmBsB,WADnB,EAEIrB,IAFJ,CAESC,GAAG,IAAI;AACbC,IAAAA,sBAAsB,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAtB;AACGP,IAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AACAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACHO,IAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACA,GAPH,EAQGC,KARH,CAQSC,GAAG,IAAI;AACbX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,UAAR;AACRqB,MAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaP;AADd,KAAD,CAAR;AAGC,GAZJ;AAaE,CAfI;AAgBP,OAAO,MAAMmB,WAAW,GAAIC,QAAD,IAAa1B,QAAD,IAAa;AACnDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACAC,EAAAA,KAAK,CAACM,IAAN,CAAW,aAAX,EAA0BwB,QAA1B,EACGvB,IADH,CACQ,MAAM;AACXH,IAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AACA,GAHH,EAIGE,KAJH,CAISC,GAAG,IAAIU,OAAO,CAACC,GAAR,CAAYX,GAAZ,CAJhB;AAKA,CAPM;;AASP,MAAMN,sBAAsB,GAAIE,KAAD,IAAW;AACzC,QAAMoB,SAAS,GAAI,UAASpB,KAAM,EAAlC;AACIQ,EAAAA,YAAY,CAACa,OAAb,CAAqB,WAArB,EAAkCD,SAAlC;AACC/B,EAAAA,KAAK,CAACqB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDQ,SAAjD;AACL,CAJD","sourcesContent":["import { SET_USER, \n\tSET_ERRORS, \n\tCLEAR_ERRORS, \n\tLOADING_UI,\n\tSET_UNAUTHENTICATED,\n\tLOADING_USER\n} from '../types';\nimport axios from 'axios';\n\nexport const loginUser = (userData, history) => (dispatch) => {\n\tdispatch({ type: LOADING_UI});\n\taxios\n\t  .post('/login', userData)\n\t   .then((res) => {\n\t\t\tsetAuthorizationHeader(res.data.token)\n\n\t\t\t    dispatch(getUserData());\n\t\t\t    dispatch({ type: CLEAR_ERRORS})\n\t\t\t\thistory.push('/');\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tdispatch({ type: SET_ERRORS,\n\t\t\t\t\tpayload: err.response.data\n\t\t\t\t})\n\t\t  })\n\t }\nexport const logoutUser = () => (dispatch) => {\n localStorage.removeItem('FBIdToken');\n delete axios.defaults.headers.common['Authorization'];\n dispatch({ type: SET_UNAUTHENTICATED });\n}\n\nexport const getUserData =() =>(dispatch)=> {\n\tdispatch({ type: LOADING_USER });\n\taxios \n\t .get('/user')\n\t .then(res => {\n\t\tdispatch({\n\t\t\ttype: SET_USER,\n\t\t\tpayload: res.data\n\t\t})\n\t})\n\t.catch(err => console.log(err));\n}\nexport const signupUser = (newUserData, history) => (dispatch) => {\n\tdispatch({ type: LOADING_UI});\n\taxios\n\t  .post('/signup', newUserData)\n\t   .then(res => {\n\t\t\t\tsetAuthorizationHeader(res.data.token)\n\t\t\t    dispatch(getUserData());\n\t\t\t    dispatch({ type: CLEAR_ERRORS})\n\t\t\t\thistory.push('/');\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tdispatch({ type: SET_ERRORS,\n\t\t\t\t\tpayload: err.response.data\n\t\t\t\t})\n\t\t  })\n\t }\nexport const uploadImage = (formData)=>(dispatch)=> {\n\tdispatch({ type: LOADING_USER});\n\taxios.post('/user/image', formData)\n\t \t.then(() => {\n\t \t\tdispatch(getUserData())\n\t \t})\n\t \t.catch(err => console.log(err))\n}\n\nconst setAuthorizationHeader = (token) => {\n\tconst FBIdToken = `Bearer ${token}`;\n\t\t   localStorage.setItem('FBIdToken', FBIdToken);\n\t\t    axios.defaults.headers.common['Authorization'] = FBIdToken;\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}