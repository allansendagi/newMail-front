{"ast":null,"code":"var _jsxFileName = \"/Users/AllanSendagi/Desktop/newMail-front/src/components/postmail.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton'; //mui\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close'; //redux\n\nimport { connect } from 'react-redux';\nimport { postMail } from '../redux/actions/dataactions';\n\nconst styles = theme => ({// submitButton: {\n  // \tposition: 'relative'\n  // },\n  // progressSpinner: {\n  // \tposition: 'absolute'\n  // },\n  // closeButton: {\n  // \tposition: 'absolute',\n  // \tleft: '90%',\n  // \ttop: '10%'\n  // }\n});\n\nclass PostMail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      body: '',\n      errors: {}\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const errors = this.state.errors;\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          loading = _this$props.UI.loading;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Post Mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Post a new Mail\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"MAIL\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"whats your destination?\",\n      error: errors.body ? true : false,\n      helperText: errors.body,\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submitButton,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Submit\", loading && React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progressSpinner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nPostMail.propTypes = {\n  postMail: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  postMail\n})(withStyles(styles)(PostMail));","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/newMail-front/src/components/postmail.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","connect","postMail","styles","theme","PostMail","state","open","body","errors","handleOpen","setState","handleClose","render","props","classes","loading","UI","closeButton","handleSubmit","textField","handleChange","submitButton","progressSpinner","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton';\n\n//mui\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n//redux\nimport { connect } from 'react-redux';\nimport { postMail } from '../redux/actions/dataactions';\n\nconst styles = theme => ({\n\n\t// submitButton: {\n\t// \tposition: 'relative'\n\t// },\n\t// progressSpinner: {\n\t// \tposition: 'absolute'\n\t// },\n\t// closeButton: {\n\t// \tposition: 'absolute',\n\t// \tleft: '90%',\n\t// \ttop: '10%'\n\t// }\n})\nclass PostMail extends Component {\n\tstate= {\n\t\topen: false,\n\t\tbody:'',\n\t\terrors: {}\n\t}\n\thandleOpen = () => {\n\t\tthis.setState({open: true})\n\t}\n\thandleClose= () => {\n\t\tthis.setState({open: false})\n\t}\n\n\trender(){\n\t\tconst { errors } = this.state;\n\t\tconst { classes, UI:{ loading}} = this.props\n\n\t\treturn (\n\t\t\t<Fragment> \n\t\t\t <MyButton onClick={this.handleOpen } tip='Post Mail' >\n\t\t\t   <AddIcon />\n\t\t\t  </MyButton>\n\t\t\t  <Dialog\n\t\t\t  open={this.state.open} onClose={this.handleClose} fullWidth maxWidth='sm'>\n\t\t\t  \t<MyButton tip='close' onClick={this.handleClose} tipClassName={classes.closeButton}>\n\t\t\t  \t\t<CloseIcon />\n\t\t\t  \t</MyButton>\n\t\t\t  \t<DialogTitle>Post a new Mail</DialogTitle>\n\t\t\t  \t<DialogContent>\n\t\t\t  \t\t<form onSubmit={this.handleSubmit}>\n\t\t\t  \t\t  <TextField name='body' type='text' label='MAIL'\n\t\t\t  \t\t  multiline rows='3' placeholder='whats your destination?'\n\t\t\t  \t\t  error={errors.body ? true : false}\n\t\t\t  \t\t  helperText={errors.body}\n\t\t\t  \t\t  className={classes.textField}\n\t\t\t  \t\t  onChange={this.handleChange}\n\t\t\t  \t\t  fullWidth />\n\t\t\t  \t\t  <Button type='submit' variant='contained' color='primary'\n\t\t\t  \t\t  className={classes.submitButton} disabled={loading}>\n\t\t\t  \t\t    Submit\n\t\t\t  \t\t    { loading && (\n\t\t\t  \t\t     <CircularProgress size={30} className={classes.progressSpinner} />\n\t\t\t  \t\t    )}\n \t\t\t  \t\t  </Button>\n\t\t\t  \t\t</form>\n\t\t\t  \t</DialogContent>\n\t\t\t  </Dialog>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\nPostMail.propTypes = {\n\tpostMail: PropTypes.func.isRequired,\n\tUI: PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => ({\n\tUI: state.UI\n})\n\nexport default connect(mapStateToProps, { postMail })(withStyles(styles)(PostMail))\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}