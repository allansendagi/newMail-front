{"ast":null,"code":"var _jsxFileName = \"/Users/AllanSendagi/Desktop/newMail-front/src/components/layout/notifications.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types'; //Mui stuff\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ToolTip from '@material-ui/core/ToolTip';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge'; //icons\n\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatIcon from '@material-ui/icons/Chat'; //redux stuff\n\nimport { connect } from 'react-redux';\nimport { markNotoficationsRead } from '../../redux/actions/useractions';\n\nclass Notifications extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handleOpen = event => {\n      this.setState({\n        anchorEl: event.target\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        userActions: null\n      });\n    };\n\n    this.onMenuOpened = () => {\n      let unreadNotoficationsIds = this.props.notifications.filter(not => !not.read).map(not => not.notificationId);\n      this.props.markNotoficationsRead(unreadNotoficationsIds);\n    };\n  }\n\n  render() {\n    const notifications = this.props.notifications;\n    const anchorEl = this.state.anchorEl;\n    dayjs.extend(relativeTime);\n    let notificationsIcon;\n\n    if (notifications && notifications.length > 0) {\n      notifications.filter(not => not.read === false).length > 0 ? notificationsIcon = React.createElement(Badge, {\n        badgeContent: notifications.filter(not => not.read === false).length,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(NotificationsIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })) : notificationsIcon = React.createElement(NotificationsIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    } else {\n      notificationsIcon = React.createElement(NotificationsIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n\n    let notificationsMarkup = notifications && notifications.length > 0 ? notifications.map(not => {\n      const verb = not.type === 'like' ? 'liked' : 'commented on';\n      const time = dayjs(not.createdAt).fromNow();\n      const iconColor = not.read ? 'primary' : 'secondary';\n      const icon = not.type === 'like' ? React.createElement(FavoriteIcon, {\n        color: iconColor,\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : React.createElement(ChatIcon, {\n        color: iconColor,\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n      return React.createElement(MenuItem, {\n        key: not.createdAt,\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, icon, React.createElement(Typography, {\n        component: Link,\n        color: \"default\",\n        variant: \"body1\",\n        to: `/users/${not.recipient}/mail/${not.mailId}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, not.sender, \" \", verb, \" Your mail \", time));\n    }) : React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"You have no notifications yet!\");\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(ToolTip, {\n      placemement: \"top\",\n      title: \"Notifications\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-owns\": anchorEl ? 'simple-menu' : undefined,\n      \"aria-haspopup\": \"true\",\n      onClick: this.handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, notificationsIcon)), React.createElement(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: this.handleClose,\n      onEntered: this.onMenuOpened,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, notificationsMarkup));\n  }\n\n}\n\nNotifications.propTypes = {\n  markNotoficationsRead: PropTypes.func.isRequired,\n  notifications: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  notifications: state.user.notifications\n});\n\nexport default connect(mapStateToProps, {\n  markNotoficationsRead\n})(Notifications);","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/newMail-front/src/components/layout/notifications.js"],"names":["React","Component","Fragment","Link","dayjs","relativeTime","PropTypes","Menu","MenuItem","IconButton","ToolTip","Typography","Badge","NotificationsIcon","FavoriteIcon","ChatIcon","connect","markNotoficationsRead","Notifications","state","anchorEl","handleOpen","event","setState","target","handleClose","userActions","onMenuOpened","unreadNotoficationsIds","props","notifications","filter","not","read","map","notificationId","render","extend","notificationsIcon","length","notificationsMarkup","verb","type","time","createdAt","fromNow","iconColor","icon","marginRight","recipient","mailId","sender","undefined","Boolean","propTypes","func","isRequired","object","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\n\n//Mui stuff\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ToolTip from '@material-ui/core/ToolTip';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\n\n//icons\n\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatIcon from '@material-ui/icons/Chat';\n\n//redux stuff\n\nimport { connect } from 'react-redux';\nimport { markNotoficationsRead } from '../../redux/actions/useractions';\n\nclass Notifications extends Component {\n\tstate = {\n\t\tanchorEl: null,\n\n\t}\n\thandleOpen=(event)=> {\n\t\tthis.setState({ anchorEl:event.target});\n\t}\n\thandleClose = () => {\n\t\tthis.setState({ userActions: null })\n\t}\n\tonMenuOpened = () => {\n\t\tlet unreadNotoficationsIds = this.props.notifications\n\t\t.filter(not => !not.read)\n\t\t.map(not => not.notificationId);\n\t\tthis.props.markNotoficationsRead(unreadNotoficationsIds);\n\t}\n\trender(){\n\t\tconst notifications = this.props.notifications;\n\t\tconst anchorEl = this.state.anchorEl;\n\n\t\tdayjs.extend(relativeTime);\n\n\t\tlet notificationsIcon;\n\n\t\tif(notifications && notifications.length > 0) {\n\t\t\tnotifications.filter(not => not.read===false).length > 0\n\t\t\t? (notificationsIcon = (\n\t\t\t\t<Badge \n\t\t\t\t  badgeContent={\n\t\t\t\t  \tnotifications.filter(not => not.read===false).length\n\t\t\t\t  }\n\t\t\t\t  color='secondary'\n\t\t\t\t  >\n\t\t\t\t <NotificationsIcon />\n\t\t\t\t</Badge>\n\t\t\t\t)) : \n\t\t\t\t(notificationsIcon = <NotificationsIcon />)\n\t\t\t} else {\n\t\t\t\tnotificationsIcon = <NotificationsIcon />\n\t\t\t\t}\n\t\t\t\tlet notificationsMarkup = \n\t\t\t\tnotifications && notifications.length > 0 ? (\n\t\t\t\t\tnotifications.map(not => {\n\t\t\t\t\t\tconst verb = not.type === 'like' ? 'liked' : 'commented on';\n\t\t\t\t\t\tconst time = dayjs(not.createdAt).fromNow();\n\t\t\t\t\t\tconst iconColor = not.read ? 'primary': 'secondary';\n\t\t\t\t\t\tconst icon = \n\t\t\t\t\t\t  not.type === 'like' ? (\n\t\t\t\t\t\t\t<FavoriteIcon color={iconColor} style={{marginRight:10}} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<ChatIcon color={iconColor} style={{ marginRight: 10}} />\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<MenuItem key={not.createdAt} onClick={this.handleClose}>\n\t\t\t\t\t\t\t\t {icon}\n\t\t\t\t\t\t\t\t  <Typography\n\t\t\t\t\t\t\t\t   component={Link}\n\t\t\t\t\t\t\t\t   color= 'default'\n\t\t\t\t\t\t\t\t   variant='body1'\n\t\t\t\t\t\t\t\t   to={`/users/${not.recipient}/mail/${not.mailId}`}\n\t\t\t\t\t\t\t\t   >\n\t\t\t\t\t\t\t\t   {not.sender} {verb} Your mail {time}\n\t\t\t\t\t\t\t\t  </Typography>\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t)\n \t\t\t\t\t})\n\t\t\t\t) : (\n\t\t\t\t<MenuItem onClick={this.handleClose}>\n\t\t\t\t You have no notifications yet!\n\t\t\t\t</MenuItem>\n\t\t\t\t)\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<ToolTip placemement='top' title='Notifications'>\n\t\t\t\t\t\t <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined}\n\t\t\t\t\t\t  aria-haspopup='true'\n\t\t\t\t\t\t  onClick={this.handleOpen}\n\t\t\t\t\t\t  >\n\t\t\t\t\t\t  {notificationsIcon}\n\t\t\t\t\t\t  </IconButton>\n\t\t\t\t\t\t</ToolTip>\n\t\t\t\t\t\t <Menu\n\t\t\t\t\t\t anchorEl={anchorEl}\n\t\t\t\t\t\t open={Boolean(anchorEl)}\n\t\t\t\t\t\t onClose={this.handleClose}\n\t\t\t\t\t\t onEntered={this.onMenuOpened}>\n\t\t\t\t\t\t {notificationsMarkup}\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</Fragment>\n\t\t\t\t)\n\t\t}\n\t}\n\nNotifications.propTypes = {\n\tmarkNotoficationsRead: PropTypes.func.isRequired,\n\tnotifications: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n\tnotifications: state.user.notifications\n})\n\nexport default connect(mapStateToProps, { markNotoficationsRead })(Notifications);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}