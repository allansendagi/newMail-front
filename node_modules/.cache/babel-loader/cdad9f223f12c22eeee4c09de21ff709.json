{"ast":null,"code":"import { SET_MAILS, SET_MAIL, LOADING_DATA, LIKE_MAIL, UNLIKE_MAIL, DELETE_MAIL, SET_ERRORS, POST_MAIL, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from '../types';\nimport axios from 'axios'; //Get all mails\n\nexport const getMails = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/mails').then(res => {\n    dispatch({\n      type: SET_MAILS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_MAILS,\n      payload: []\n    });\n  });\n};\nexport const getMail = mailId => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.get(`/mail/${mailId}`).then(res => {\n    dispatch({\n      type: SET_MAIL,\n      payload: res.data\n    });\n    dispatch({\n      type: STOP_LOADING_UI\n    });\n  }).catch(err => console.log(err));\n}; //post a scream\n\nexport const postMail = newMail => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/update', newMail).then(res => {\n    dispatch({\n      type: POST_MAIL,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.res.data\n    });\n  });\n}; //like mail\n\nexport const likeMail = mailId => dispatch => {\n  axios.get(`/update/${mailId}/like`).then(res => {\n    dispatch({\n      type: LIKE_MAIL,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //unlike mail\n\nexport const unlikeMail = mailId => dispatch => {\n  axios.get(`/update/${mailId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_MAIL,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const deleteMail = mailId => dispatch => {\n  axios.delete(`/mail/&{mailId}`).then(() => {\n    dispatch({\n      type: DELETE_MAIL,\n      payload: mailId\n    });\n  }).catch(err => console.log(err));\n};\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/newMail-front/src/redux/actions/dataactions.js"],"names":["SET_MAILS","SET_MAIL","LOADING_DATA","LIKE_MAIL","UNLIKE_MAIL","DELETE_MAIL","SET_ERRORS","POST_MAIL","CLEAR_ERRORS","LOADING_UI","STOP_LOADING_UI","axios","getMails","dispatch","type","get","then","res","payload","data","catch","err","getMail","mailId","console","log","postMail","newMail","post","likeMail","unlikeMail","deleteMail","delete","clearErrors"],"mappings":"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","sourcesContent":["import { SET_MAILS,\n\t\tSET_MAIL,\n\t    LOADING_DATA, \n\t    LIKE_MAIL, \n\t    UNLIKE_MAIL,\n\t    DELETE_MAIL,\n\t    SET_ERRORS,\n\t    POST_MAIL,\n\t    CLEAR_ERRORS,\n\t    LOADING_UI,\n\t    STOP_LOADING_UI\n\t} from '../types';\n\nimport axios from 'axios';\n\n//Get all mails\nexport const getMails = () => (dispatch) => {\n\tdispatch({ type: LOADING_DATA })\n\taxios\n\t .get('/mails')\n\t .then(res=> {\n\t \tdispatch({\n\n\t \t\ttype: SET_MAILS,\n\t \t\tpayload: res.data\n\t \t})\n\t })\n\t .catch(err => {\n\t \tdispatch({\n\t \t\ttype: SET_MAILS,\n\t \t\tpayload:[]\n\t \t})\n\t })\n}\n\nexport const getMail = (mailId) => dispatch=> {\ndispatch({ type: LOADING_UI })\naxios.get(`/mail/${mailId}`)\n.then(res => {\n\tdispatch({\n\t\ttype: SET_MAIL,\n\t\tpayload: res.data\n\t})\n\tdispatch({ type: STOP_LOADING_UI})\n})\n.catch(err => console.log(err))\n}\n\n//post a scream\n\nexport const postMail = (newMail) => (dispatch) => {\n\tdispatch({type: LOADING_UI});\n\taxios\n\t  .post('/update', newMail)\n\t  .then(res => {\n\t \tdispatch({\n\t \t\ttype: POST_MAIL,\n\t \t\tpayload: res.data\n\t \t})\n\t \tdispatch({ type: CLEAR_ERRORS })\n\t })\n\t .catch(err => {\n\t \tdispatch({\n\t \t\ttype: SET_ERRORS,\n\t \t\tpayload: err.res.data\n\t \t})\n\t }) \n} \n\n//like mail\nexport const likeMail = (mailId)=>(dispatch)=> {\n\taxios\n\t .get(`/update/${mailId}/like`)\n\t .then((res) => {\n\t \tdispatch({\n\t \t\ttype: LIKE_MAIL,\n\t \t\tpayload: res.data\n\t \t})\n\t })\n\t .catch((err) => console.log(err))\n\n}\n//unlike mail\nexport const unlikeMail = (mailId) => (dispatch) => {\n\taxios\n\t .get(`/update/${mailId}/unlike`)\n\t .then(res => {\n\t \tdispatch({\n\t \t\ttype: UNLIKE_MAIL,\n\t \t\tpayload: res.data\n\t \t})\n\t })\n\t .catch(err => console.log(err))\n\n}\nexport const deleteMail = (mailId) => (dispatch)=> {\n\taxios.delete(`/mail/&{mailId}`)\n\t.then(() => {\n\t\tdispatch({ type: DELETE_MAIL, payload: mailId})\n\t})\n\t.catch(err => console.log(err))\n}\n\nexport const clearErrors =() => dispatch=> {\n\tdispatch({ type: CLEAR_ERRORS})\n}\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}