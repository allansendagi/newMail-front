{"ast":null,"code":"import _objectSpread from \"/Users/AllanSendagi/Desktop/newMail-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/AllanSendagi/Desktop/newMail-front/src/components/mailDialog.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom'; //MUI STUFF\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'; //Icons\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore'; //Redux\n\nimport { connect } from 'react-redux';\nimport { getMail } from '../redux/actions/dataactions';\n\nconst styles = theme => _objectSpread({}, theme, {\n  invisibleSeparator: {\n    border: 'none',\n    margin: 4\n  }\n});\n\nclass MailDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n      this.props.getMail(this.props.mailId);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          _this$props$mail = _this$props.mail,\n          mailId = _this$props$mail.mailId,\n          body = _this$props$mail.body,\n          createdAt = _this$props$mail.createdAt,\n          likeCount = _this$props$mail.likeCount,\n          commentCount = _this$props$mail.commentCount,\n          userImage = _this$props$mail.userImage,\n          userHandle = _this$props$mail.userHandle,\n          loading = _this$props.UI.loading;\n    const dialogMarkup = loading ? React.createElement(CircularProgress, {\n      size: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) : React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: userImage,\n      alt: \"profile\",\n      className: classes.profileImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: Link,\n      color: \"primary\",\n      variant: \"h5\",\n      to: `/users/${userHandle}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"@\", userHandle), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, dayjs(createdAt).format('h:mm a, MMM DD YYYY')), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, body)));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Expand mail\",\n      tipClassName: classes.expandButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(UnfoldMore, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(DialogContent, {\n      className: classes.DialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, dialogMarkup)));\n  }\n\n}\n\nMailDialog.propTypes = {\n  getMail: PropTypes.func.isRequired,\n  mailId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  mail: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToprops = state => ({\n  mail: state.data.mail,\n  UI: state.UI\n});\n\nconst mapActionToProps = {\n  getMail\n};\nexport default connect(mapStateToprops, mapActionToProps)(withStyles(styles)(MailDialog));","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/newMail-front/src/components/mailDialog.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","dayjs","Link","Dialog","DialogContent","DialogTitle","CircularProgress","Grid","Typography","CloseIcon","UnfoldMore","connect","getMail","styles","theme","invisibleSeparator","border","margin","MailDialog","state","open","handleOpen","setState","props","mailId","handleClose","render","classes","mail","body","createdAt","likeCount","commentCount","userImage","userHandle","loading","UI","dialogMarkup","profileImage","format","expandButton","closeButton","propTypes","func","isRequired","string","object","mapStateToprops","data","mapActionToProps"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\n\n//MUI STUFF\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n//Icons\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\n\n//Redux\nimport { connect } from 'react-redux';\nimport { getMail } from '../redux/actions/dataactions';\n\nconst styles = (theme)=> ({\n\t...theme,\n\tinvisibleSeparator : {\n\t\tborder: 'none',\n\t\tmargin: 4\n\t}\n})\n\nclass MailDialog extends Component {\n\tstate = {\n\t\topen: false\n\t}\n\thandleOpen = ()=> {\n\t\tthis.setState({open:true})\n\t\tthis.props.getMail(this.props.mailId)\n\t}\n\thandleClose = () => {\n\t\tthis.setState({ open: false})\n\t}\n\n\trender() {\n\n\t\tconst {\n\t\t\tclasses, \n\t\t\tmail: { \n\t\t\t  mailId, \n\t\t\t  body, \n\t\t\t  createdAt, \n\t\t\t  likeCount, \n\t\t\t  commentCount, \n\t\t\t  userImage, \n\t     \t  userHandle\n\t\t},\n\t\tUI: {loading}\n\t } = this.props;\n\n\t const dialogMarkup = loading ? (\n\t \t<CircularProgress size={200} />\n\t \t) : (\n\t \t<Grid container spacing={16}>\n\t \t <Grid item sm={5}>\n\t \t  <img src={userImage} alt='profile' className={classes.profileImage} />\n\t \t </Grid>\n\t \t <Grid item sm={5}>\n\t \t  <Typography\n\t \t    component={Link}\n\t \t    color='primary'\n\t \t    variant='h5'\n\t \t    to={`/users/${userHandle}`}\n\t \t     >\n\t \t \t@{userHandle}\n\t \t \t</Typography>\n\t \t \t<hr className={classes.invisibleSeparator} />\n\t \t \t<Typography variant='body2' color='textSecondary'>\n\t \t \t {dayjs(createdAt).format('h:mm a, MMM DD YYYY')}\n\t \t \t</Typography>\n\t \t \t<hr className={classes.invisibleSeparator}/>\n\t \t \t<Typography variant='body1'>\n\t \t \t {body}\n\t \t \t</Typography>\n\t \t </Grid>\n\t \t</Grid>\n\t \t)\n\t return (\n\t\t<Fragment>\n\t\t\t<MyButton onClick={this.handleOpen} tip='Expand mail' tipClassName={classes.expandButton}>\n\t\t\t <UnfoldMore color='primary' />\n\t\t\t</MyButton>\n\t\t\t<Dialog\n\t\t    \topen={this.state.open}\n\t\t        onClose={this.handleClose} \n\t\t        fullWidth \n\t\t        maxWidth='sm'\n\t\t        >\n\t\t\t  \t<MyButton \n\t\t\t  \ttip='close' \n\t\t\t  \tonClick={this.handleClose} \n\t\t\t  \ttipClassName={classes.closeButton}\n\t\t\t  \t>\n\t\t\t  \t<CloseIcon />\n\t\t\t  \t</MyButton>\n\t\t\t <DialogContent className={classes.DialogContent}>\n\t\t\t  {dialogMarkup}\n\t\t\t </DialogContent>\n\t\t\t</Dialog>\n\t\t</Fragment>\n\t)\n\t}\n}\nMailDialog.propTypes = {\n\tgetMail: PropTypes.func.isRequired,\n\tmailId: PropTypes.string.isRequired,\n\tuserHandle: PropTypes.string.isRequired,\n\tmail: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n}\n\nconst mapStateToprops = state => ({\n\tmail:state.data.mail,\n\tUI: state.UI\n})\n\nconst mapActionToProps = {\n\tgetMail\n}\nexport default connect(mapStateToprops,mapActionToProps)(withStyles(styles)(MailDialog));\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}