{"ast":null,"code":"import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from '../types';\nimport axios from 'axios';\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/login', userData).then(res => {\n    const FBIdToken = `Bearer ${res.data.token}`;\n    localStorage.setItem('FBIdToken', FBIdToken);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    }); // history.push('/');\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const getUserData = () => dispatch => {\n  axios.get('/user').then(res => {\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/newMail-front/src/redux/actions/useractions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","axios","loginUser","userData","history","dispatch","type","post","then","res","FBIdToken","data","token","localStorage","setItem","defaults","headers","common","getUserData","catch","err","payload","response","get","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,YAA/B,EAA6CC,UAA7C,QAA+D,UAA/D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAwBC,QAAD,IAAc;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACAC,EAAAA,KAAK,CACFM,IADH,CACQ,QADR,EACkBJ,QADlB,EAEIK,IAFJ,CAEUC,GAAD,IAAS;AACf,UAAMC,SAAS,GAAI,UAASD,GAAG,CAACE,IAAJ,CAASC,KAAM,EAA3C;AACGC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCJ,SAAlC;AACAT,IAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDP,SAAjD;AACAL,IAAAA,QAAQ,CAACa,WAAW,EAAZ,CAAR;AACAb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR,CALY,CAMf;AACA,GATH,EAUGoB,KAVH,CAUSC,GAAG,IAAI;AACbf,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,UAAR;AACRuB,MAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaX;AADd,KAAD,CAAR;AAGC,GAdJ;AAeE,CAjBI;AAmBP,OAAO,MAAMO,WAAW,GAAE,MAAMb,QAAD,IAAa;AAC3CJ,EAAAA,KAAK,CACHsB,GADF,CACM,OADN,EAEEf,IAFF,CAEOC,GAAG,IAAI;AACbJ,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAET,QADE;AAERwB,MAAAA,OAAO,EAAEZ,GAAG,CAACE;AAFL,KAAD,CAAR;AAIA,GAPD,EAQCQ,KARD,CAQOC,GAAG,IAAII,OAAO,CAACC,GAAR,CAAYL,GAAZ,CARd;AASA,CAVM","sourcesContent":["import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from '../types';\nimport axios from 'axios';\n\nexport const loginUser = (userData, history) => (dispatch) => {\n\tdispatch({ type: LOADING_UI});\n\taxios\n\t  .post('/login', userData)\n\t   .then((res) => {\n\t\t\t\tconst FBIdToken = `Bearer ${res.data.token}`;\n\t\t\t    localStorage.setItem('FBIdToken', FBIdToken);\n\t\t\t    axios.defaults.headers.common['Authorization'] = FBIdToken;\n\t\t\t    dispatch(getUserData());\n\t\t\t    dispatch({ type: CLEAR_ERRORS})\n\t\t\t\t// history.push('/');\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tdispatch({ type: SET_ERRORS,\n\t\t\t\t\tpayload: err.response.data\n\t\t\t\t})\n\t\t  })\n\t }\n\nexport const getUserData =() =>(dispatch)=> {\n\taxios \n\t .get('/user')\n\t .then(res => {\n\t\tdispatch({\n\t\t\ttype: SET_USER,\n\t\t\tpayload: res.data\n\t\t})\n\t})\n\t.catch(err => console.log(err));\n}\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}