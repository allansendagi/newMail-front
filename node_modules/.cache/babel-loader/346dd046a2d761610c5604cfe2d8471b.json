{"ast":null,"code":"import { SET_MAILS, LOADING_DATA, LIKE_MAIL, UNLIKE_MAIL, DELETE_MAIL, SET_ERRORS, POST_MAIL, CLEAR_ERRORS, LOADING_UI } from '../types';\nimport axios from 'axios'; //Get all mails\n\nexport const getMails = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/mails').then(res => {\n    dispatch({\n      type: SET_MAILS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_MAILS,\n      payload: []\n    });\n  });\n}; //post a scream\n\nexport const postMail = newMail => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/update', newMail).then(res => {\n    dispatch({\n      type: POST_MAIL,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //like mail\n\nexport const likeMail = mailId => dispatch => {\n  axios.get(`/update/${mailId}/like`).then(res => {\n    dispatch({\n      type: LIKE_MAIL,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //unlike mail\n\nexport const unlikeMail = mailId => dispatch => {\n  axios.get(`/update/${mailId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_MAIL,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const deleteMail = mailId => dispatch => {\n  axios.delete(`/mail/&{mailId}`).then(() => {\n    dispatch({\n      type: DELETE_MAIL,\n      payload: mailId\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/newMail-front/src/redux/actions/dataactions.js"],"names":["SET_MAILS","LOADING_DATA","LIKE_MAIL","UNLIKE_MAIL","DELETE_MAIL","SET_ERRORS","POST_MAIL","CLEAR_ERRORS","LOADING_UI","axios","getMails","dispatch","type","get","then","res","payload","data","catch","err","postMail","newMail","post","response","likeMail","mailId","console","log","unlikeMail","deleteMail","delete"],"mappings":"AAAA,SAASA,SAAT,EACKC,YADL,EAEKC,SAFL,EAGKC,WAHL,EAIKC,WAJL,EAKKC,UALL,EAMKC,SANL,EAOKC,YAPL,EAQKC,UARL,QASQ,UATR;AAWA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;AACAQ,EAAAA,KAAK,CACHI,GADF,CACM,QADN,EAEEC,IAFF,CAEOC,GAAG,IAAG;AACXJ,IAAAA,QAAQ,CAAC;AAERC,MAAAA,IAAI,EAAEZ,SAFE;AAGRgB,MAAAA,OAAO,EAAED,GAAG,CAACE;AAHL,KAAD,CAAR;AAKA,GARF,EASEC,KATF,CASQC,GAAG,IAAI;AACbR,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEZ,SADE;AAERgB,MAAAA,OAAO,EAAC;AAFA,KAAD,CAAR;AAIA,GAdF;AAeA,CAjBM,C,CAmBP;;AAEA,OAAO,MAAMI,QAAQ,GAAIC,OAAD,IAAcV,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEJ;AAAP,GAAD,CAAR;AACAC,EAAAA,KAAK,CAACa,IAAN,CAAW,SAAX,EAAsBD,OAAtB,EACEP,IADF,CACOC,GAAG,IAAI;AACZJ,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEN,SADE;AAERU,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFL,KAAD,CAAR;AAIAN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACA,GAPF,EAQEW,KARF,CAQQC,GAAG,IAAI;AACbR,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEP,UADE;AAERW,MAAAA,OAAO,EAAEG,GAAG,CAACI,QAAJ,CAAaN;AAFd,KAAD,CAAR;AAIA,GAbF;AAcA,CAhBM,C,CAkBP;;AACA,OAAO,MAAMO,QAAQ,GAAIC,MAAD,IAAWd,QAAD,IAAa;AAC9CF,EAAAA,KAAK,CACHI,GADF,CACO,WAAUY,MAAO,OADxB,EAEEX,IAFF,CAEQC,GAAD,IAAS;AACdJ,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEV,SADE;AAERc,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFL,KAAD,CAAR;AAIA,GAPF,EAQEC,KARF,CAQSC,GAAD,IAASO,OAAO,CAACC,GAAR,CAAYR,GAAZ,CARjB;AAUA,CAXM,C,CAYP;;AACA,OAAO,MAAMS,UAAU,GAAIH,MAAD,IAAad,QAAD,IAAc;AACnDF,EAAAA,KAAK,CACHI,GADF,CACO,WAAUY,MAAO,SADxB,EAEEX,IAFF,CAEOC,GAAG,IAAI;AACZJ,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAET,WADE;AAERa,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFL,KAAD,CAAR;AAIA,GAPF,EAQEC,KARF,CAQQC,GAAG,IAAIO,OAAO,CAACC,GAAR,CAAYR,GAAZ,CARf;AAUA,CAXM;AAYP,OAAO,MAAMU,UAAU,GAAIJ,MAAD,IAAad,QAAD,IAAa;AAClDF,EAAAA,KAAK,CAACqB,MAAN,CAAc,iBAAd,EACChB,IADD,CACM,MAAM;AACXH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,WAAR;AAAqBY,MAAAA,OAAO,EAAES;AAA9B,KAAD,CAAR;AACA,GAHD,EAICP,KAJD,CAIOC,GAAG,IAAIO,OAAO,CAACC,GAAR,CAAYR,GAAZ,CAJd;AAKA,CANM","sourcesContent":["import { SET_MAILS,\n\t    LOADING_DATA, \n\t    LIKE_MAIL, \n\t    UNLIKE_MAIL,\n\t    DELETE_MAIL,\n\t    SET_ERRORS,\n\t    POST_MAIL,\n\t    CLEAR_ERRORS,\n\t    LOADING_UI\n\t} from '../types';\n\nimport axios from 'axios';\n\n//Get all mails\nexport const getMails = () => (dispatch) => {\n\tdispatch({ type: LOADING_DATA })\n\taxios\n\t .get('/mails')\n\t .then(res=> {\n\t \tdispatch({\n\n\t \t\ttype: SET_MAILS,\n\t \t\tpayload: res.data\n\t \t})\n\t })\n\t .catch(err => {\n\t \tdispatch({\n\t \t\ttype: SET_MAILS,\n\t \t\tpayload:[]\n\t \t})\n\t })\n}\n\n//post a scream\n\nexport const postMail = (newMail) => (dispatch) => {\n\tdispatch({type: LOADING_UI});\n\taxios.post('/update', newMail)\n\t .then(res => {\n\t \tdispatch({\n\t \t\ttype: POST_MAIL,\n\t \t\tpayload: res.data\n\t \t})\n\t \tdispatch({ type: CLEAR_ERRORS })\n\t })\n\t .catch(err => {\n\t \tdispatch({\n\t \t\ttype: SET_ERRORS,\n\t \t\tpayload: err.response.data\n\t \t})\n\t }) \n} \n\n//like mail\nexport const likeMail = (mailId)=>(dispatch)=> {\n\taxios\n\t .get(`/update/${mailId}/like`)\n\t .then((res) => {\n\t \tdispatch({\n\t \t\ttype: LIKE_MAIL,\n\t \t\tpayload: res.data\n\t \t})\n\t })\n\t .catch((err) => console.log(err))\n\n}\n//unlike mail\nexport const unlikeMail = (mailId) => (dispatch) => {\n\taxios\n\t .get(`/update/${mailId}/unlike`)\n\t .then(res => {\n\t \tdispatch({\n\t \t\ttype: UNLIKE_MAIL,\n\t \t\tpayload: res.data\n\t \t})\n\t })\n\t .catch(err => console.log(err))\n\n}\nexport const deleteMail = (mailId) => (dispatch)=> {\n\taxios.delete(`/mail/&{mailId}`)\n\t.then(() => {\n\t\tdispatch({ type: DELETE_MAIL, payload: mailId})\n\t})\n\t.catch(err => console.log(err))\n}\n\n"]},"metadata":{},"sourceType":"module"}