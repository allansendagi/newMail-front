{"ast":null,"code":"import _objectSpread from \"/Users/AllanSendagi/Desktop/newMail-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/AllanSendagi/Desktop/newMail-front/src/components/mail/comments.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs'; //MUI\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => _objectSpread({}, theme.spread1);\n\nclass Comments extends Component {\n  render() {\n    const _this$props = this.props,\n          comments = _this$props.comments,\n          classes = _this$props.classes;\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, comments.map(comment => {\n      const body = comment.body,\n            createdAt = comment.createdAt,\n            userImage = comment.userImage,\n            userHandle = comment.userHandle;\n      return React.createElement(Fragment, {\n        key: createdAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: userImage,\n        alt: \"comment\",\n        className: classes.commentImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.commentData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: Link,\n        to: `/users/${userHandle}`,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, userHandle), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, dayjs(createdAt).format('h:mm a, MMMM DD YYYY')), React.createElement(\"hr\", {\n        className: classes.invisibleSeparator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, body))))), React.createElement(\"hr\", {\n        className: classes.visibleSeparator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(Comments);","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/newMail-front/src/components/mail/comments.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Link","dayjs","Grid","Typography","styles","theme","spread1","Comments","render","props","comments","classes","map","comment","body","createdAt","userImage","userHandle","commentImage","commentData","format","invisibleSeparator","visibleSeparator","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\n\n//MUI\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n\t...theme.spread1\n})\n\nclass Comments extends Component {\n\trender() {\n\t\tconst { comments, classes } = this.props;\n\n\t\treturn (\n\t\t\t<Grid container>\n\t\t\t  {comments.map((comment)=> {\n\t\t\t  \tconst { body, createdAt, userImage, userHandle } = comment;\n\t\t\t  \treturn (\n\t\t\t  \t\t<Fragment key={createdAt}>\n\t\t\t  \t\t <Grid item sm={12}>\n\t\t\t  \t\t  <Grid container>\n\t\t\t  \t\t   <Grid item sm={2}>\n\t\t\t  \t\t    <img src={userImage} alt='comment' className={classes.commentImage}/>\n\t\t\t  \t\t  </Grid>\n\t\t\t  \t\t  <Grid item sm={9}>\n\t\t\t  \t\t   <div className={classes.commentData}>\n\t\t\t  \t\t     <Typography\n\t\t\t  \t\t      variant='h5'\n\t\t\t  \t\t      component={Link}\n\t\t\t  \t\t      to={`/users/${userHandle}`}\n\t\t\t  \t\t      color='primary'\n\t\t\t  \t\t     >\n\t\t\t  \t\t     { userHandle}\n\t\t\t  \t\t     </Typography>\n\t\t\t  \t\t     <Typography variant='body2' color='textSecondary'>\n\t\t\t  \t\t     {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n\t\t\t  \t\t     </Typography>\n\t\t\t  \t\t     <hr className={classes.invisibleSeparator} />\n\t\t\t  \t\t     <Typography variant='body1'>\n\t\t\t  \t\t      {body}\n\t\t\t  \t\t     </Typography>\n\t\t\t  \t\t   </div>\n\t\t\t  \t\t   </Grid>\n\t\t\t  \t\t  </Grid>\n\t\t\t  \t\t </Grid>\n\t\t\t  \t\t <hr className={classes.visibleSeparator} />\n\t\t\t  \t\t</Fragment>\n\t\t\t  \t)\n\t\t\t  })}\n\t\t\t</Grid>\n\t\t)\n\t}\n}\nComments.propTypes = {\n\tcomments: PropTypes.array.isRequired\n}\nexport default withStyles(styles)(Comments);"]},"metadata":{},"sourceType":"module"}