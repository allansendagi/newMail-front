{"ast":null,"code":"import _objectSpread from \"/Users/AllanSendagi/Desktop/newMail-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { SET_MAILS, LIKE_MAIL, UNLIKE_MAIL, LOADING_DATA, SET_MAIL } from '../types';\nconst initialState = {\n  mails: [],\n  mail: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case SET_MAILS:\n      return _objectSpread({}, state, {\n        mails: action.payload,\n        loading: false\n      });\n\n    case SET_MAIL:\n      return _objectSpread({}, state, {\n        mail: action.payload\n      });\n\n    case LIKE_MAIL:\n    case UNLIKE_MAIL:\n      let index = state.mails.findIndex(mail => mail.mailId === action.payload.mailId);\n      state.mails[index] = action.payload;\n\n      if (state.mail.mailId === action.payload.mailId) {\n        state.mail = action.payload;\n      }\n\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/newMail-front/src/redux/reducers/dataReducer.js"],"names":["SET_MAILS","LIKE_MAIL","UNLIKE_MAIL","LOADING_DATA","SET_MAIL","initialState","mails","mail","loading","state","action","type","payload","index","findIndex","mailId"],"mappings":";AAAA,SAASA,SAAT,EACEC,SADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,QAJF,QAKQ,UALR;AAOA,MAAMC,YAAY,GAAE;AACnBC,EAAAA,KAAK,EAAC,EADa;AAEnBC,EAAAA,IAAI,EAAC,EAFc;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAApB;AAMA,eAAe,UAASC,KAAK,GAACJ,YAAf,EAA6BK,MAA7B,EAAqC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKR,YAAL;AACC,+BACIM,KADJ;AAECD,QAAAA,OAAO,EAAE;AAFV;;AAID,SAAKR,SAAL;AACI,+BACIS,KADJ;AAECH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFf;AAGCJ,QAAAA,OAAO,EAAC;AAHT;;AAKJ,SAAKJ,QAAL;AACC,+BACIK,KADJ;AAECF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFd;;AAID,SAAKX,SAAL;AACA,SAAKC,WAAL;AACA,UAAIW,KAAK,GAAGJ,KAAK,CAACH,KAAN,CAAYQ,SAAZ,CACVP,IAAD,IAASA,IAAI,CAACQ,MAAL,KAAcL,MAAM,CAACE,OAAP,CAAeG,MAD3B,CAAZ;AAGAN,MAAAA,KAAK,CAACH,KAAN,CAAYO,KAAZ,IAAqBH,MAAM,CAACE,OAA5B;;AACA,UAAIH,KAAK,CAACF,IAAN,CAAWQ,MAAX,KAAsBL,MAAM,CAACE,OAAP,CAAeG,MAAzC,EAAgD;AAC/CN,QAAAA,KAAK,CAACF,IAAN,GAAaG,MAAM,CAACE,OAApB;AACA;;AACD,+BACIH,KADJ;;AAGA;AACA,aAAOA,KAAP;AA9BD;AAgCA","sourcesContent":["import { SET_MAILS,\n\t LIKE_MAIL, \n\t UNLIKE_MAIL, \n\t LOADING_DATA ,\n\t SET_MAIL\n\t} from '../types';\n\nconst initialState ={\n\tmails:[],\n\tmail:{},\n\tloading: false\n}\n\nexport default function(state=initialState, action) {\n\tswitch(action.type) {\n\t\tcase LOADING_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t}\n\t\tcase SET_MAILS:\n\t\t    return {\n\t\t    \t...state,\n\t\t    \tmails: action.payload,\n\t\t    \tloading:false\n\t\t    }\n\t\tcase SET_MAIL:\n\t\t return {\n\t\t \t...state,\n\t\t \tmail: action.payload\n\t\t };\n\t\tcase LIKE_MAIL:\n\t\tcase UNLIKE_MAIL:\n\t\tlet index = state.mails.findIndex(\n\t\t\t(mail)=> mail.mailId===action.payload.mailId\n\t\t\t);\n\t\tstate.mails[index] = action.payload;\n\t\tif (state.mail.mailId === action.payload.mailId){\n\t\t\tstate.mail = action.payload;\n\t\t}\n\t\treturn {\n\t\t\t...state\n\t\t}\n\t\tdefault: \n\t\treturn state\n\t}\n}"]},"metadata":{},"sourceType":"module"}