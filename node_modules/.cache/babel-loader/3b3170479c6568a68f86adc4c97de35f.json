{"ast":null,"code":"import _objectSpread from \"/Users/AllanSendagi/Desktop/newMail-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/AllanSendagi/Desktop/newMail-front/src/components/mail/mailDialog.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\nimport LikeButton from './likebutton';\nimport Comments from './comments';\nimport CommentForm from './commentform';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom'; //MUI STUFF\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'; //Icons\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport ChatIcon from '@material-ui/icons/Chat'; //Redux\n\nimport { connect } from 'react-redux';\nimport { getMail, clearErrors } from '../../redux/actions/dataactions';\n\nconst styles = theme => _objectSpread({}, theme.spread1);\n\nclass MailDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      oldPath: '',\n      newPath: ''\n    };\n\n    this.handleOpen = () => {\n      let oldPath = window.location.pathname;\n      const _this$props = this.props,\n            userHandle = _this$props.userHandle,\n            mailId = _this$props.mailId;\n      const newPath = `/users/${userHandle}/mail/${mailId}`;\n      window.history.pushState(null, null, newPath);\n      this.setState({\n        open: true,\n        oldPath,\n        newPath\n      });\n      this.props.getMail(this.props.mailId);\n    };\n\n    this.handleClose = () => {\n      window.history.pushState(null, null, this.state.oldPath);\n      this.setState({\n        open: false\n      });\n      this.props.clearErrors();\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          classes = _this$props2.classes,\n          _this$props2$mail = _this$props2.mail,\n          mailId = _this$props2$mail.mailId,\n          body = _this$props2$mail.body,\n          createdAt = _this$props2$mail.createdAt,\n          likeCount = _this$props2$mail.likeCount,\n          commentCount = _this$props2$mail.commentCount,\n          userImage = _this$props2$mail.userImage,\n          userHandle = _this$props2$mail.userHandle,\n          comments = _this$props2$mail.comments,\n          loading = _this$props2.UI.loading;\n    const dialogMarkup = loading ? React.createElement(\"div\", {\n      className: classes.spinnerDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      size: 200,\n      thickness: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })) : React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: userImage,\n      alt: \"profile\",\n      className: classes.profileImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: Link,\n      color: \"primary\",\n      variant: \"h5\",\n      to: `/users/${userHandle}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"@\", userHandle), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, dayjs(createdAt).format('h:mm a, MMM DD YYYY')), React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, body), React.createElement(LikeButton, {\n      mailId: mailId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" \", likeCount, \" likes \"), React.createElement(MyButton, {\n      tip: \"comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(ChatIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, commentCount, \"comments\")), React.createElement(\"hr\", {\n      className: classes.visibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(CommentForm, {\n      mailId: mailId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Comments, {\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Expand mail\",\n      tipClassName: classes.expandButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(UnfoldMore, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(DialogContent, {\n      className: classes.DialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, dialogMarkup)));\n  }\n\n}\n\nMailDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getMail: PropTypes.func.isRequired,\n  mailId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  mail: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToprops = state => ({\n  mail: state.data.mail,\n  UI: state.UI\n});\n\nconst mapActionToProps = {\n  getMail,\n  clearErrors\n};\nexport default connect(mapStateToprops, mapActionToProps)(withStyles(styles)(MailDialog));","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/newMail-front/src/components/mail/mailDialog.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","LikeButton","Comments","CommentForm","dayjs","Link","Dialog","DialogContent","CircularProgress","Grid","Typography","CloseIcon","UnfoldMore","ChatIcon","connect","getMail","clearErrors","styles","theme","spread1","MailDialog","state","open","oldPath","newPath","handleOpen","window","location","pathname","props","userHandle","mailId","history","pushState","setState","handleClose","componentDidMount","openDialog","render","classes","mail","body","createdAt","likeCount","commentCount","userImage","comments","loading","UI","dialogMarkup","spinnerDiv","profileImage","invisibleSeparator","format","visibleSeparator","expandButton","closeButton","propTypes","func","isRequired","string","object","mapStateToprops","data","mapActionToProps"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\nimport LikeButton from './likebutton';\nimport Comments from './comments';\nimport CommentForm from './commentform';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\n\n//MUI STUFF\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n//Icons\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport ChatIcon from '@material-ui/icons/Chat';\n\n//Redux\nimport { connect } from 'react-redux';\nimport { getMail, clearErrors } from '../../redux/actions/dataactions';\n\nconst styles = (theme)=> ({\n\t...theme.spread1\t\n})\n\nclass MailDialog extends Component {\n\tstate = {\n\t\topen: false,\n\t\toldPath: '',\n\t\tnewPath: ''\n\t};\n\tcomponentDidMount(){\n\t\tif(this.props.openDialog){\n\t\t\tthis.handleOpen();\n\t\t}\n\t}\n\thandleOpen = ()=> {\n\t\tlet oldPath = window.location.pathname;\n\n\t\tconst { userHandle, mailId } = this.props;\n\t\tconst newPath = `/users/${userHandle}/mail/${mailId}`;\n\n\t\twindow.history.pushState(null, null, newPath)\n\n\t\tthis.setState({open:true, oldPath, newPath})\n\t\tthis.props.getMail(this.props.mailId)\n\t}\n\n\thandleClose = () => {\n\t\twindow.history.pushState(null, null, this.state.oldPath)\n\t\tthis.setState({ open: false})\n\t\tthis.props.clearErrors()\n\n\t}\n\n\trender() {\n\n\t\tconst {\n\t\t\tclasses, \n\t\t\tmail: { \n\t\t\t  mailId, \n\t\t\t  body, \n\t\t\t  createdAt, \n\t\t\t  likeCount, \n\t\t\t  commentCount, \n\t\t\t  userImage, \n\t     \t  userHandle,\n\t     \t  comments\n\t\t},\n\t\tUI: {loading}\n\t } = this.props;\n\n\t const dialogMarkup = loading ? (\n\t \t<div className={classes.spinnerDiv}>\n\t \t<CircularProgress size={200} thickness={2}/>\n\t \t</div>\n\t \t) : (\n\t \t<Grid container spacing={16}>\n\t \t <Grid item sm={5}>\n\t \t  <img src={userImage} alt='profile' className={classes.profileImage} />\n\t \t </Grid>\n\t \t <Grid item sm={5}>\n\t \t  <Typography\n\t \t    component={Link}\n\t \t    color='primary'\n\t \t    variant='h5'\n\t \t    to={`/users/${userHandle}`}\n\t \t     >\n\t \t \t@{userHandle}\n\t \t \t</Typography>\n\t \t \t<hr className={classes.invisibleSeparator} />\n\t \t \t<Typography variant='body2' color='textSecondary'>\n\t \t \t {dayjs(createdAt).format('h:mm a, MMM DD YYYY')}\n\t \t \t</Typography>\n\t \t \t<hr className={classes.invisibleSeparator}/>\n\t \t \t<Typography variant='body1'>\n\t \t \t {body}\n\t \t \t</Typography>\n\t \t \t<LikeButton mailId={mailId} />\n\t \t \t<span> {likeCount} likes </span>\n\t \t \t<MyButton tip='comments'>\n\t\t\t     <ChatIcon color='primary' />\n\t\t\t  </MyButton>\n\t\t\t   <span>{commentCount}comments</span>\n\t \t </Grid>\n\t \t   <hr className={classes.visibleSeparator}/>\n\t \t   <CommentForm mailId={mailId} />\n\t \t  <Comments comments={comments} />\n\t \t</Grid>\n\t \t)\n\t return (\n\t\t<Fragment>\n\t\t\t<MyButton onClick={this.handleOpen} tip='Expand mail' tipClassName={classes.expandButton}>\n\t\t\t <UnfoldMore color='primary' />\n\t\t\t</MyButton>\n\t\t\t<Dialog\n\t\t    \topen={this.state.open}\n\t\t        onClose={this.handleClose} \n\t\t        fullWidth \n\t\t        maxWidth='sm'\n\t\t        >\n\t\t\t  \t<MyButton \n\t\t\t  \ttip='close' \n\t\t\t  \tonClick={this.handleClose} \n\t\t\t  \ttipClassName={classes.closeButton}\n\t\t\t  \t>\n\t\t\t  \t<CloseIcon />\n\t\t\t  \t</MyButton>\n\t\t\t <DialogContent className={classes.DialogContent}>\n\t\t\t  {dialogMarkup}\n\t\t\t </DialogContent>\n\t\t\t</Dialog>\n\t\t</Fragment>\n\t)\n\t}\n}\nMailDialog.propTypes = {\n\tclearErrors: PropTypes.func.isRequired,\n\tgetMail: PropTypes.func.isRequired,\n\tmailId: PropTypes.string.isRequired,\n\tuserHandle: PropTypes.string.isRequired,\n\tmail: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n}\n\nconst mapStateToprops = state => ({\n\tmail:state.data.mail,\n\tUI: state.UI\n})\n\nconst mapActionToProps = {\n\tgetMail,\n\tclearErrors\n}\nexport default connect(mapStateToprops,mapActionToProps)(withStyles(styles)(MailDialog));\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}