{"ast":null,"code":"var _jsxFileName = \"/Users/AllanSendagi/Desktop/newMail-front/src/components/mail/commentform.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { connect } from 'react-redux';\nimport { submitComment } from '../../redux/actions/dataactions'; //MUI stuff\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({});\n\nclass CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body: '',\n      errors: {}\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.submitComment(this.props.mailId, {\n        body: this.state.body\n      });\n    };\n  }\n\n  componentWillRecieveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          authenticated = _this$props.authenticated;\n    const errors = this.state.errors;\n    const commentFormMarkup = authenticated ? React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"Comment on Mail\",\n      error: errors.comment ? true : false,\n      helperText: errors.comment,\n      value: this.state.body,\n      onChange: this.handleChange,\n      fullWidth: true,\n      className: classes.TextField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"hr\", {\n      className: classes.visibleSeparator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })) : null;\n    return commentFormMarkup;\n  }\n\n}\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  mailId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  submitComment\n})(withStyles(styles)(CommentForm));","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/newMail-front/src/components/mail/commentform.js"],"names":["React","Component","PropTypes","withStyles","connect","submitComment","Button","Grid","TextField","styles","theme","CommentForm","state","body","errors","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","mailId","componentWillRecieveProps","nextProps","UI","render","classes","authenticated","commentFormMarkup","textAlign","comment","button","visibleSeparator","propTypes","func","isRequired","object","string","bool","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {connect} from 'react-redux';\nimport { submitComment} from '../../redux/actions/dataactions';\n\n//MUI stuff\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst styles = theme => ({\n\n})\nclass CommentForm extends Component {\n\tstate = {\n\t\tbody: '',\n\t\terrors:{}\n\t}\n\tcomponentWillRecieveProps(nextProps){\n\t\tif (nextProps.UI.errors){\n\t\t\tthis.setState({errors:nextProps.UI.errors})\n\t\t}\n\t}\n\thandleChange = (event) => {\n\t\tthis.setState({[event.target.name]: event.target.value});\n\t}\n\thandleSubmit = (event)=> {\n\t\tevent.preventDefault();\n\t\tthis.props.submitComment(this.props.mailId, {body:this.state.body})\n\t}\n\n\n\trender() {\n\tconst { classes, authenticated } = this.props;\n\tconst errors = this.state.errors;\nconst commentFormMarkup = authenticated ? (\n\t<Grid item sm={12} style={{ textAlign:'center'}}>\n\t <form onSubmit={this.handleSubmit}>\n\t  <TextField \n\t   name='body'\n\t   type='text'\n\t   label='Comment on Mail'\n\t   error={errors.comment ? true : false}\n\t   helperText={errors.comment}\n\t   value={this.state.body}\n\t   onChange={this.handleChange}\n\t   fullWidth\n\t   className={classes.TextField}\n\t  />\n\t  <Button type='submit'\n\t  variant='contained'\n\t  color='primary'\n\t  className={classes.button}\n\t  >\n\t  \tSubmit\n\t  </Button>\n\t </form>\n\t\t<hr className={classes.visibleSeparator}/>\n\t</Grid>\n\t) : null\n\t\treturn commentFormMarkup;\t\n\t\t\n\t}\n}\nCommentForm.propTypes = {\n\tsubmitComment:PropTypes.func.isRequired,\n\tUI: PropTypes.object.isRequired,\n\tclasses: PropTypes.object.isRequired,\n\tmailId: PropTypes.string.isRequired,\n\tauthenticated: PropTypes.bool.isRequired\n\n\n\n}\nconst mapStateToProps = state => ({\n\tUI: state.UI,\n\tauthenticated: state.user.authenticated\n})\n\nexport default connect(mapStateToProps, {submitComment})(withStyles(styles)(CommentForm));\n"]},"metadata":{},"sourceType":"module"}